##############################################################
# ALM Team Azure example pipeline that pulls in the JavaScript
# build template from the devops_pipelines repository
# Copy this file to your repository and fill in the required
# parameters, AppName and Portfolio
# Commit the changes. This example will trigger from
# a code commit to the master branch
##############################################################
   
trigger:
- master
   
# Repo: devops_pipelines/templates
# File: azure-pipelines.yml
resources:
  repositories:
    - repository: almtemplates
      type: git
      name: ALM/devops_pipelines
      ref: refs/tags/js-npm-bld2.x.x                              #tag reference for a specific version of the template we want to use.
  
   
stages:
- stage: Build
  jobs:
  - template: javascript-npm-build/javascript-npm-build.yml@almtemplates   ###############This pipeline is being deprecated please consider using the jsstack-pipeline.yml
    parameters:
      Portfolio: 'your portfolio'                                           #Pass in your portfolio short name. For example 'ESM'
      # Optional AgentDemands: 'Agent.ComputerName'
      # Optional AppName: '$(Build.DefinitionName)'                         #your application name
      # Optional ArtifactoryServiceConnection: 'ALM Artifactory Internal'   #Default value "ALM Artifactory Internal"
      # Optional BuildFolder: 'build'                                       #Default Build folder name for saving build files
      # Optional checkout: 'self'                                           #for more information please see https://confluence.churchofjesuschrist.org/display/ALM/Pipeline+checkout+feature
      # Optional NodeVersion: '10.x'                                        #Default value Node version is 10.x
      # Optional Portfolio: ''
      # Optional RunSonarScan: 'true'                                       #This expression will return true if the branch is master. Set to 'false' if a scan is unwanted on the master branch.
      # Optional SonarServiceConnection: 'ALM Sonar'
      # Optional workingFolder: '.'                                         #This allows the user to specify a different working folder for running the Npm ci command in
       
